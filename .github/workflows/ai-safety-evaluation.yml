name: AI Safety Evaluation Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily safety evaluations at 2 AM UTC
    - cron: '0 2 * * *'

env:
  PYTHON_VERSION: '3.9'

jobs:
  safety-evaluation:
    name: Run AI Safety Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
        
    - name: Run Safety Evaluator Tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üîç Running Safety Evaluation Tests..."
        python -m pytest tests/ -v --cov=src --cov-report=xml
        
    - name: Run Red Team Adversarial Tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üî¥ Running Red Team Adversarial Tests..."
        python src/red_team/adversarial_prompts.py
        
    - name: Run Constitutional AI Tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "‚öñÔ∏è Running Constitutional AI Evaluation..."
        python src/constitutional/constitutional_ai.py
        
    - name: Test Claude Integration
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "ü§ñ Testing Claude API Integration..."
        python test_claude.py
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: safety-tests
        name: codecov-safety
        
  benchmark-evaluation:
    name: Run AI Safety Benchmarks
    runs-on: ubuntu-latest
    needs: safety-evaluation
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Comprehensive Safety Benchmarks
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üìä Running Comprehensive Safety Benchmarks..."
        python full_demo.py
        
    - name: Generate Safety Report
      run: |
        echo "üìã Generating Safety Evaluation Report..."
        python -c "
        import json
        import datetime
        report = {
          'timestamp': datetime.datetime.now().isoformat(),
          'status': 'completed',
          'tests_run': ['safety_evaluation', 'red_team', 'constitutional_ai'],
          'branch': '${{ github.ref_name }}',
          'commit': '${{ github.sha }}'
        }
        with open('safety_report.json', 'w') as f:
          json.dump(report, f, indent=2)
        "
        
    - name: Upload Safety Report
      uses: actions/upload-artifact@v4
      with:
        name: safety-evaluation-report
        path: safety_report.json
        retention-days: 30